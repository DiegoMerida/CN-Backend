type Querry 
{
    getPlayer: [Player]!
    getOnePlayer(id:ID):Player!

    getposts: [Posts]!
    getOnePost(id:ID):Posts!

    getChat(id:ID):Chat!
}

type mutation 
{
    createNewPlayer(data:AuthorInput!):Player! 
    updateOnePlayer(id:ID!, data:AuthorInputUpdate!):Player!
    deleteOnePlayer(id:ID!):String!

    createNewPost(data:PostImput):Post!
    updateOnePost(id:ID!, data:PostInputUpdate!):Post! 
    deleteOnePost(id:ID!):String!

    createNewChat(data:ChatInput):Chat!
    updateOneChat(id:ID!, data:ChatInputUpdate!):Chat!
    deleteOneCHat(id:ID):String!
}

type Player
{
    _id:ID!
    email:String!
    birth_date:String!
    profile_pic:String!
    main_champ:String!
    main_rol:String!
    second_rol:String!
    summoner_name:String!
    discord:String!
}

input PlayerInput
{
    email:String!
    password:String!
    birth_date:String!
    profile_pic:String
    main_champ:String
    main_rol:String
    second_rol:String
    discord:String
    summoner_name:String!
}

input PlayerInputUpdate
{
    email:String
    password:String
    birth_date:String
    profile_pic:String
    main_champ:String
    main_rol:String
    discord:String
    summoner_name:String
}

type Post
{
    _id:ID!
    title: String!
    content:String!
    author: Player
    cover: URL!
    is_active: Boolean
}
